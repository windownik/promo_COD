from aiogram import types
from main import dp
from modules.handlers.text_functions import get_multipost_text, save_multipost
from modules.handlers import users_functions
from modules.keyboards import post_user_type, send_post_kb, start_admin_kb
from modules.dispatcher import Admin_POSTS
from modules.csv_reader import read_csv


# Start menu
@dp.callback_query_handler(state=Admin_POSTS.new_post_input_description, text='get_file')
async def start_menu(call: types.CallbackQuery):
    await call.message.edit_text(f'–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –§–∞–π–ª csv —Å —Å—Ç–æ–ª–±–∏–∫–æ–º –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤')
    await Admin_POSTS.new_post_catch_file.set()


# –ù–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
@dp.message_handler(state=Admin_POSTS.new_post_catch_file, content_types=types.ContentType.DOCUMENT)
async def start_menu(message: types.Message):
    await message.document.download(destination_file='cods.csv')
    # file_id = message.document.file_id
    # users_functions.save_data2(tg_id=message.from_user.id, data=file_id)
    await read_csv(message.chat.id)
    await message.answer(f'–í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–¥–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ —è –Ω–∞—à–µ–ª –≤ —Ñ–∞–π–ª–µ.\n–ï—Å–ª–∏ –≤—Å–µ –≤–µ—Ä–Ω–æ –Ω–∞–∂–º–∏—Ç–µ "–î–∞!"',
                         reply_markup=send_post_kb())
    await Admin_POSTS.new_post_multicod_text.set()


# Start menu
@dp.callback_query_handler(state=Admin_POSTS.new_post_multicod_text)
async def start_menu(call: types.CallbackQuery):
    if call.data == 'confirm':
        await call.message.edit_text(f'–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ–±—â–µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤.')
        await Admin_POSTS.new_post_multicod_save_text.set()
    elif call.data == 'back':
        await call.message.edit_text(f'–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –§–∞–π–ª csv —Å —Å—Ç–æ–ª–±–∏–∫–æ–º –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤')
        await Admin_POSTS.new_post_catch_file.set()


# Start menu
@dp.message_handler(state=Admin_POSTS.new_post_multicod_save_text)
async def start_menu(message: types.Message):
    users_functions.save_data2(tg_id=message.from_user.id, data=message.text)
    await message.answer(f'–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ç–æ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥.', reply_markup=post_user_type())
    await Admin_POSTS.new_post_multicod_user_type.set()


# Start menu
@dp.callback_query_handler(state=Admin_POSTS.new_post_multicod_user_type)
async def start_menu(call: types.CallbackQuery):
    user_id = call.from_user.id
    users_functions.save_data3(tg_id=call.from_user.id, data=call.data)
    # –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞?
    text = get_multipost_text(user_id)
    await call.message.answer(text=text, parse_mode='html')
    await call.message.answer(f'–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ?', reply_markup=send_post_kb())
    await Admin_POSTS.post_new_multicod.set()


# Start menu
@dp.callback_query_handler(state=Admin_POSTS.post_new_multicod, text='confirm')
async def start_menu(call: types.CallbackQuery):
    # –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞?
    save_multipost(user_id=call.from_user.id)
    await call.message.edit_text(f'–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ')
    await call.message.answer(text='üëãüèª –ü—Ä–∏–≤–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä! –ß–µ–º —Ç–µ–±–µ –ø–æ–º–æ—á—å?', reply_markup=start_admin_kb())
